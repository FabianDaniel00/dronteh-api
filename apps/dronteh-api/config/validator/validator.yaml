App\Entity\User:
  properties:
    email:
      - NotBlank: { message: 'api.users.constraint.email.not_blank' }
      - Email: { message: 'api.users.constraint.email.email' }
    roles:
      - NotBlank: { message: 'api.users.constraint.roles.not_blank' }
      - Choice: { callback: getSupportedRoles, message: 'api.users.constraint.role.invalid' }
    password:
      - NotBlank: { message: 'api.users.constraint.password.not_blank' }
      - Length: { min: 6, minMessage: 'api.users.constraint.password.length', max: 4096 }
    firstname:
      - NotBlank: { message: 'api.users.constraint.firstname.not_blank' }
      - Length: { min: 2, minMessage: 'api.users.constraint.firstname.length', max: 4096 }
    lastname:
      - NotBlank: { message: 'api.users.constraint.lastname.not_blank' }
      - Length: { min: 2, minMessage: 'api.users.constraint.lastname.length', max: 4096 }
    tel:
      - NotBlank: { message: 'api.users.constraint.tel.not_blank' }
      - Misd\PhoneNumberBundle\Validator\Constraints\PhoneNumber: { defaultRegion: 'SR', message: 'api.users.constraint.tel.phone_number' }
    locale:
      - Choice: { callback: getSupportedLocales, message: 'api.users.constraint.locale.invalid' }
    captcha:
      - Karser\Recaptcha3Bundle\Validator\Constraints\Recaptcha3: { message: 'api.users.constraint.captcha' }
    created_at:
      - DateTime: {message: 'api.users.constraint.created_at.invalid'}
    updated_at:
      - DateTime: {message: 'api.users.constraint.updated_at.invalid'}
    isVerified:
      - NotBlank: { message: 'api.users.constraint.is_verified.not_blank' }
      - Choice: { choices: [true, false, 1, 0], message: 'api.users.constraint.is_verified.invalid' }
    is_deleted:
      - NotBlank: { message: 'api.users.constraint.is_deleted.not_blank' }
      - Choice: { choices: [true, false, 1, 0], message: 'api.users.constraint.is_deleted.invalid' }

App\Entity\Reservation:
  properties:
    parcel_number:
      - NotBlank: { message: 'api.reservations.constraint.parcel_number.not_blank' }
      - Positive: { message: 'api.reservations.constraint.parcel_number.positive' }
    land_area:
      - NotBlank: { message: 'api.reservations.constraint.land_area.not_blank' }
      - Positive: { message: 'api.reservations.constraint.land_area.positive' }
    created_at:
      - DateTime: {message: 'api.reservations.constraint.created_at.invalid'}
    updated_at:
      - DateTime: {message: 'api.reservations.constraint.updated_at.invalid'}
    is_deleted:
      - NotBlank: { message: 'api.reservations.constraint.is_deleted.not_blank' }
      - Choice: { choices: [true, false, 1, 0], message: 'api.reservations.constraint.is_deleted.invalid' }
    time:
      - DateTime: { message: 'api.reservations.constraint.time.invalid' }
    # -1: non-active, 0: pending, 1: in process
    status:
      - NotBlank: { message: 'api.reservations.constraint.status.not_blank' }
      - Choice: { choices: [-1, 0, 1], message: 'api.reservations.constraint.status.invalid' }
    to_be_present:
      - NotBlank: { message: 'api.reservations.constraint.to_be_present.not_blank' }
      - Choice: { choices: [true, false, 1, 0], message: 'api.reservations.constraint.to_be_present.invalid' }
    comment:
      - Length: { max: 5000, maxMessage: 'api.reservations.constraint.comment.length' }
    reservation_interval_start:
      - DateTime: { message: 'api.reservations.constraint.reservation_interval_start.invalid' }
    reservation_interval_end:
      - DateTime: { message: 'api.reservations.constraint.reservation_interval_end.invalid' }

  getters:
    minDifferenceBetweenTwoDates:
      - 'IsTrue': { message: 'api.reservations.constraint.less_difference' }
